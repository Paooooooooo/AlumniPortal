@model AlumniPortal.Models.job_post_tbl
@{
    ViewBag.Title = "Create Job Post";
}

<!DOCTYPE html>
<html>
<head>
    <title>Home - Alumni Portal</title>
    <link rel="stylesheet" type="text/css" href="~/Content/Site.css" />
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Cinzel&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400&family=Noto+Sans&display=swap" rel="stylesheet">
    <style>
        .navbar-custom {
            background-color: #a52a2a; /* Pale maroon color */
            width: 100%;
            z-index: 1000; /* Ensure navbar is on top */
            min-height: 4.5rem; /* Set minimum height for the navbar */
            padding: 0 1rem; /* Adjust padding inside the navbar */
        }

        .navbar-brand, .nav-link {
            color: white !important;
            font-family: 'Cinzel', serif; /* Apply Cinzel font to navbar elements */
            font-weight: 400; /* Apply Cinzel Regular (400) */
            font-size: 20px; /* Increase font size for navbar text */
        }

        .navbar-brand {
            display: flex;
            align-items: center; /* Center vertically */
        }

            .navbar-brand img {
                height: 50px; /* Set image height */
                margin-right: 10px; /* Adjust margin between image and text */
            }

        .nav-link.btn-primary {
            font-weight: bold;
            background-color: #e6be8a; /* Change button background color to #e6be8a */
            border-color: #e6be8a; /* Match border color with background color */
            color: black !important; /* Set initial text color to black */
        }

            .nav-link.btn-primary:hover {
                font-weight: bold;
                background-color: #cc9f54; /* Slightly darker hover background color */
                border-color: #cc9f54; /* Match hover border color with hover background color */
                color: white !important; /* Change text color to white on hover */
            }

        .navbar-nav .nav-item .nav-link {
            transition: background-color 0.3s ease, color 0.3s ease; /* Smooth transition */
        }

            .navbar-nav .nav-item .nav-link:hover {
                background-color: #cc9f54; /* Hover background color */
                color: white !important; /* Text color on hover */
            }

        .nav-item + .nav-item {
            margin-left: 10px; /* Adjust the space between each nav item */
        }

        .container {
            margin: 0px; /* Add margin to the content container */
        }

        .content-container h2 {
            margin-top: -20px; /* Example: move the h2 "Job Board" 10px upward */
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg navbar-custom fixed-top">
            <!-- Add 'fixed-top' class to navbar -->
            <a class="navbar-brand text-white" href="/">
                <img src="~/Content/Images/puplogo.png" alt="Logo" height="40" class="d-inline-block align-top mr-2">
                PUP Alumni Portal
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-end" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/Company/Index">Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Company/Events">Events</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/Company/JobPosting">Job Posting</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Settings
                        </a>
                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="/Company/Profile">Profile</a>
                            <a class="dropdown-item" href="/Company/ChangePassword">Change Password</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="/Company/Logout">Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </nav>
    </header>
    <div class="container">
        <h2>Edit Job Post</h2>

        @using (Html.BeginForm("EditJobPost", "Company", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            @Html.HiddenFor(model => model.job_id)

            <div class="form-group">
                @Html.LabelFor(model => model.job_title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.job_title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.job_title, "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Add fields for job_target, job_loc, job_specs, job_salary, job_type, job_deadline -->
            <div class="form-group">
                @Html.LabelFor(model => model.job_target, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.job_target, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.job_target, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.job_loc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.job_loc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.job_loc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.job_specs, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.job_specs, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.job_specs, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.job_salary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.job_salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.job_salary, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.job_type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.job_type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.job_type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.job_post_date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.job_post_date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.job_post_date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.job_deadline, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.job_deadline, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.job_deadline, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    @Html.ActionLink("Cancel", "JobPosting", "Company", null, new { @class = "btn btn-default" })
                </div>
            </div>
        }
    </div>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</body>
</html>
